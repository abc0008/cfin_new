"""\nStorage Service Module\n====================\n\nThis module provides an abstraction layer for file storage operations in the CFIN\nfinancial analysis platform. It implements storage services that support both local\nfilesystem and AWS S3 cloud storage, allowing the application to work seamlessly\nwith different storage backends.\n\nPrimary responsibilities:\n- Provide a consistent interface for file storage operations\n- Support multiple storage backends (local filesystem and AWS S3)\n- Handle file saving, retrieval, and deletion operations\n- Manage file paths and identifiers consistently across backends\n\nKey Components:\n- StorageService: Abstract base class defining the storage interface\n- LocalStorageService: Implementation for local filesystem storage\n- S3StorageService: Implementation for AWS S3 cloud storage\n- Factory method for obtaining the appropriate storage service based on configuration\n\nInteractions with other files:\n-----------------------------\n1. cfin/backend/repositories/document_repository.py:\n   - Uses StorageService for file storage operations\n   - Methods used: save_file, get_file, delete_file, get_file_path\n   - Handles document binary content persistence and retrieval\n\n2. cfin/backend/pdf_processing/document_service.py:\n   - Indirectly uses StorageService through DocumentRepository\n   - Uploads and processes PDF files stored by this service\n\n3. cfin/backend/pdf_processing/langgraph_service.py:\n   - Indirectly uses StorageService to access document binary content\n   - Retrieves PDF files for analysis and citation extraction\n\n4. cfin/backend/pdf_processing/claude_service.py:\n   - May directly access files stored by StorageService\n   - Retrieves PDF binary content for Claude API processing\n\n5. cfin/backend/api/routes/documents.py:\n   - Upload endpoints use StorageService via DocumentRepository\n   - Routes document uploads through the storage layer\n\nThis service is configurable through environment variables:\n- STORAGE_TYPE: \"local\" or \"s3\" to select the storage backend\n- UPLOAD_DIR: Directory for local file storage\n- S3_BUCKET_NAME: AWS S3 bucket for cloud storage\n- AWS_ACCESS_KEY_ID: AWS credentials for S3 access\n- AWS_SECRET_ACCESS_KEY: AWS credentials for S3 access\n- S3_REGION: AWS region for S3 bucket\n\nThe storage service layer ensures file operations are consistent regardless of\nthe underlying storage mechanism, making the application more flexible and\neasier to deploy in different environments.\n"""\n\nimport os\nimport io\nimport uuid\nimport aiofiles\nfrom typing import BinaryIO, Optional\nimport boto3\nimport logging\nfrom abc import ABC, abstractmethod\n\nlogger = logging.getLogger(__name__)